config_version: 2
interval: {{polling_interval}}

resource.url: {{api_host}}/api/shield
 
state: 
  auth_url: {{auth_url}}
  client_id: {{strider_id}}
  client_secret: {{strider_secret}}
  audience: https://platform-api/

program: |
  state.with(
    // Step 1: Hit auth endpoint
    post(state.auth_url, "application/json", {
      "client_id": state.client_id,
      "client_secret": state.client_secret,
      "audience": state.audience,
    }.encode_json()).as(auth_resp, auth_resp.StatusCode != 200 ?
        {
          "events": {
            "error": {
              "message": "Auth error: " + string(auth_resp.Body)
            }
          }
        }
      :
        {
          "Body": auth_resp.Body
        }
    ).as(auth_resp,
      get_request(state.url)
        .with({
          "Header": {
            "Authorization": "Bearer " + string(auth_resp.Body.access_token)
          }
        }).do_request()
        .as(api_resp, api_resp.StatusCode != 200 ?
            {
              "events": {
                "error": {
                  "message": "API error: " + string(api_resp.Body)
                }
              }
            }
          :
            {
              "events": {
                "data": api_resp.Body,
              }          
            }
        )
    )
  )
